---

- name: Copy the SSL certificate to the remote server
  copy: content="{{ ssl_crt }}" dest={{ ssl_dest_dir }}/{{ project_name }}.crt
  when: use_https == true
  notify: restart nginx

- name: Copy the SSL private key to the remote server
  copy: content="{{ ssl_key }}" dest={{ ssl_dest_dir }}/{{ project_name }}.key
  when: use_https == true
  notify: restart nginx

# nginx should have read access to the cert and key
- name: Make nginx owner of cert and key files and restrict access
  file:
    path: "{{ item }}"
    owner: "{{ webserver_user }}"
    mode: u=r,g=r,o=
  when: use_https == true
  with_items:
    - "{{ ssl_cert_path }}"
    - "{{ ssl_cert_key_path }}"
    - "{{ ssl_trust_cert_path }}"

# Template is in project-specific provision/templates dir
- name: Create the Nginx HTTPS configuration file
  template: src=../../../../provision_proj/templates/nginx_site_config_https.j2
            dest=/etc/nginx/sites-available/{{ project_name }}
            backup=yes
  when: use_https == true and vagrant_mode == false
  notify: reload nginx

- name: Create the Nginx HTTP configuration file
  template: src=../../../../provision_proj/templates/nginx_site_config_http.j2
            dest=/etc/nginx/sites-available/{{ project_name }}
            backup=yes
  when: use_https == false and vagrant_mode == false
  notify: reload nginx

- name: Create the Nginx HTTP configuration file for vagrant
  template: src=../../../../provision_proj/templates/nginx_site_config_http_vagrant.j2
            dest=/etc/nginx/sites-available/{{ project_name }}
            backup=yes
  when: use_https == false and vagrant_mode == true
  notify: reload nginx

- name: Ensure that the application site is enabled
  command: ln -s /etc/nginx/sites-available/{{ project_name }}
           /etc/nginx/sites-enabled/{{ project_name }}
           creates=/etc/nginx/sites-enabled/{{ project_name }}
  notify: reload nginx

- name: Ensure Nginx service is started
  service: name=nginx state=started enabled=yes
